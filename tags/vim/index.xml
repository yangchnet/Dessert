<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>vim on Linote</title>
    <link>http://yangchnet.github.io/Dessert/tags/vim/</link>
    <description>Recent content in vim on Linote</description>
    <image>
      <url>http://yangchnet.github.io/Dessert/papermod-cover.png</url>
      <link>http://yangchnet.github.io/Dessert/papermod-cover.png</link>
    </image>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Wed, 03 Jul 2024 00:00:00 +0000</lastBuildDate><atom:link href="http://yangchnet.github.io/Dessert/tags/vim/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>vim</title>
      <link>http://yangchnet.github.io/Dessert/posts/tool/vim/</link>
      <pubDate>Wed, 03 Jul 2024 00:00:00 +0000</pubDate>
      
      <guid>http://yangchnet.github.io/Dessert/posts/tool/vim/</guid>
      <description>1. 移动技巧 1.1 在同一行移动  首先是基本的hjkl 使用f&amp;lt;chat&amp;gt;来移动到当前行光标之后的字符上，这里可以选择一些出现频率较低的字符，这样有更高的移动效率。在使用f&amp;lt;char&amp;gt;后，，可以使用;来重复上次的查找移动，如果不小心多移动了一个，可以按,回退 使用w,e,b,ge在单词间跳转，其各自含义为：  w 正向移动到下一单词的开头 b 反向移动到当前单词/上一单词的开头 e 正向移动到当前单词/下一单词的结尾 ge 反向移动到上一单词的结尾   w、b等是在单词间的跳转，但一个逗号或点也算单词，如果是想把一个用空格分隔的串叫做单词，可以使用W， B， E， gE  1.2 在当前文件内移动  使用*跳转到当前文件内的当前光标下的单词 %跳转到匹配的括号 使用/执行常规搜索，并按n再次执行搜索  1.3 使用位置标记跳转  m&amp;lt;a-z&amp;gt;在当前文件中标记当前位置，mA-Z在全局定义一个mark &#39;&amp;lt;a-zA-Z&amp;gt;跳转到刚才的缓冲区 vim还预置了一些特殊的标记：  &#39;&#39;当前文件中，上次跳转之前的位置； &#39;.上次修改的地方； &#39;^ 上次插入的地方 &#39;&amp;lt;, &#39;&amp;gt; 上次高亮选区的起始和结束位置    2. 选择技巧  在可视模式下的选择技巧
  &amp;lt;CR&amp;gt;+v进入列选择模式 当你在一个具有特定结构的文本中时，例如程序源码，可以使用例如vi}来选择当前大括号中的所有字符，类似的：vi), vi&amp;quot; vi&amp;lt;char&amp;gt;是选择除之外的字符，如果你想选择包括外围大括号}在内的字符，可以使用va}。为了便于记忆，可以把 i 想成“inside”，而把 a 想成“around” 或“all”。   形如i}, a)的选区选择的文本在vim中被称为文本对象，Vim 的文本对象由两个字符组成，第一个字符永远是 i 或是a。我们一般说，以 i 开头的文本对象会选择分隔符内部的文本，而以 a 开头的文本对象则会选择包括分隔符在内的整个文本。这里我们使用文本对象进行选取，但也可以借助文本对象进行编辑。</description>
    </item>
    
    <item>
      <title>vim配置</title>
      <link>http://yangchnet.github.io/Dessert/posts/tool/vim%E9%85%8D%E7%BD%AE/</link>
      <pubDate>Wed, 29 Dec 2021 00:00:00 +0000</pubDate>
      
      <guid>http://yangchnet.github.io/Dessert/posts/tool/vim%E9%85%8D%E7%BD%AE/</guid>
      <description>1. 安装插件系统  使用的是vim-plug
 curl -fLo ~/.vim/autoload/plug.vim --create-dirs \  https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim 2. 安装插件 打开~/.vimrc, 在其中写入：
&amp;quot; Specify a directory for plugins &amp;quot; - For Neovim: stdpath(&#39;data&#39;) . &#39;/plugged&#39; &amp;quot; - Avoid using standard Vim directory names like &#39;plugin&#39; call plug#begin(&#39;~/.vim/plugged&#39;) &amp;quot; Make sure you use single quotes &amp;quot; Shorthand notation; fetches https://github.com/junegunn/vim-easy-align Plug &#39;junegunn/vim-easy-align&#39; &amp;quot; Any valid git URL is allowed Plug &#39;junegunn/vim-github-dashboard&#39; &amp;quot; On-demand loading Plug &#39;scrooloose/nerdtree&#39;, { &#39;on&#39;: &#39;NERDTreeToggle&#39; } Plug &#39;tpope/vim-fireplace&#39;, { &#39;for&#39;: &#39;clojure&#39; } &amp;quot; Using a non-default branch Plug &#39;rdnetto/YCM-Generator&#39;, { &#39;branch&#39;: &#39;stable&#39; } &amp;quot; Using a tagged release; wildcard allowed (requires git 1.</description>
    </item>
    
  </channel>
</rss>
